
# CSV in・out
file1 = pd.read_csv("./納品データ/file1.tsv")


# apply

from sklearn.datasets import load_iris
iris_dataset = load_iris()

def get_target_names(x):
    if x == 0:
        return "setosa"
    if x == 1:
        return "versicolor"
    if x == 2:
        return "virginica"

a = pd.DataFrame(columns=iris_dataset['feature_names'],data = iris_dataset['data'])
a['target'] = iris_dataset['target']
a["target_names"] = a['target'].apply(lambda x : get_target_names(x))
a.head()

# Sereis * apply
def get_correct_format(file):
    print([str(file[0]).split()])
    file1_values = str(file[0]).split()
    print(type(np.array(file1_values)))
    # リスト型をSeriesに変換することでDataFrameに入れられる
    return pd.Series(file1_values)

file1_df = pd.DataFrame()
file1_df[file1_columns] = file1_Series.head().apply(lambda x : get_correct_format(x))
file1_df



# split
file1_values =  "2018-03-01\t0\t0009B46902A8\t0\t20\t-1"
file1_values  = file1_values.split()
file1_values

# date[year month day]

def get_split_data(x):
    year = x.year
    month = x.month
    day = x.day
    return pd.Series([year,month,day ])

atent_day[['year','month','day']] = patent_day['date_of_issue'].apply(lambda x : get_split_data(x))

# columsn & data 特定カラムにValueを代入する
values = [[]]
values[i].append(e.text)
※　data は2次元配列でカラム数である必要がある。
game_df = pd.DataFrame(columns = columns,data = values)
game_df

#　既存のDataFrameに新しいカラムと値を追加する方法
diff_lsit = []
for i in range(len(data)):
    diff = str(int(data.loc[i]['access count after']) - int(data.loc[i]['access count before']))
    diff_lsit.append(diff)
print(diff)
data['diff'] = diff_lsit
data


